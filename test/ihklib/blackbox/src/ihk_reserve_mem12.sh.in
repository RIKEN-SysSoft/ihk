#!/usr/bin/sh

# define WORKDIR
if [ "${AUTOTEST_HOME}" != "" ]; then
    . ${AUTOTEST_HOME}/bin/config.sh
fi

. @CMAKE_INSTALL_PREFIX@/bin/util.sh

detect_cpu_model
echo "[ INFO ] cpu model: $cpu_model"

if [ "$cpu_model" == "a64fx" ]; then
    cpuset_mems=$(sudo cat /sys/fs/cgroup/cpuset/system.slice/cpuset.mems)
    sudo bash -c 'echo "0-7" > /sys/fs/cgroup/cpuset/system.slice/cpuset.mems'

    pushd /sys/fs/cgroup/memory/user.slice > /dev/null
    memsw_limit_in_bytes=$(cat memory.memsw.limit_in_bytes)
    limit_in_bytes=$(cat memory.limit_in_bytes)
    sudo bash -c "cat memory.soft_limit_in_bytes > memory.memsw.limit_in_bytes"
    sudo bash -c "cat memory.soft_limit_in_bytes > memory.limit_in_bytes"
    popd > /dev/null
fi

init_oom_killer

sudo timeout 300 @CMAKE_INSTALL_PREFIX@/bin/ihk_reserve_mem12 -u $(id -u) -g $(id -g)
ret=$?

if [ "$ret" == "124" ]; then
    echo "[  NG  ] reservation time"
elif [ "$ret" == "0" ]; then
    echo "[  OK  ] reservation time"
fi

if [ "$cpu_model" == "a64fx" ]; then
    sudo bash -c "echo $cpuset_mems > /sys/fs/cgroup/cpuset/system.slice/cpuset.mems"

    pushd /sys/fs/cgroup/memory/user.slice > /dev/null
    sudo bash -c "echo $limit_in_bytes > memory.limit_in_bytes"
    sudo bash -c "echo $memsw_limit_in_bytes > memory.memsw.limit_in_bytes"
    popd > /dev/null
fi

fini_oom_killer


if [ "${AUTOTEST_HOME}" != "" ]; then
    # Pass OK/NG to runtestlist.sh
    echo $ret > $WORKDIR/result.log
fi
