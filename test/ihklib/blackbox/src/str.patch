diff --git a/kernel/syscall.c b/kernel/syscall.c
index 81af5337..1dc148ae 100644
--- a/kernel/syscall.c
+++ b/kernel/syscall.c
@@ -9982,6 +9982,27 @@ SYSCALL_DECLARE(util_register_desc)
 	return 0;
 }
 
+#define TEST_SZARRAY (1UL << (28 + 1))
+long *test_array;
+
+SYSCALL_DECLARE(test_kmalloc)
+{
+	test_array = kmalloc(TEST_SZARRAY, IHK_MC_AP_NOWAIT);
+	memset((void *)test_array, 0xaa, TEST_SZARRAY);
+	return 0;
+}
+
+SYSCALL_DECLARE(test_str)
+{
+	int i;
+
+	for (i = 0; i < TEST_SZARRAY / sizeof(long); i++) {
+		test_array[i] = (1UL << 63) - 1;
+	}
+
+	return 0;
+}
+
 void
 reset_cputime()
 {
diff --git a/arch/arm64/kernel/include/syscall_list.h b/arch/arm64/kernel/include/syscall_list.h
index bb3f6c0..f57d2ef 100644
--- a/arch/arm64/kernel/include/syscall_list.h
+++ b/arch/arm64/kernel/include/syscall_list.h
@@ -148,3 +148,5 @@ SYSCALL_DELEGATED(1069, epoll_wait)
  * EOF just after it because those are used as a
  * robust marker for the autotest patch.
  */
+SYSCALL_HANDLED(2001, test_kmalloc)
+SYSCALL_HANDLED(2002, test_str)
